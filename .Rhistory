# ggplot(data = dino_data, mapping = aes(x = x, y = y)) +
#   geom_point()
```
plot(dino_data$x, dino_data$y)
library(ggplot2)
install.packages("ggplot2")
library(datasauRus)
library(ggplot2)
ggplot(data = dino_data, mapping = aes(x = x, y = y)) +
geom_point()
ggplot(data = dino_data, mapping = aes(x = x, y = y)) +
geom_point() +
theme_bw()
install.packages("dplyr")
library(dplyr)
library(datasauRus)
library(ggplot2)
library(dplyr)
cor(dino_data$x, dino_data$y)
unique(df$dataset)
library(datasauRus)
library(ggplot2)
library(dplyr)
library(tidyr)
star_data <- df[df$dataset == "star", ]
plot(star_data$x, star_data$y)
dino_data <- datasaurus_dozen[datasaurus_dozen$dataset == 'dino', ]
plot(dino_data$x, dino_data$y)
cor(star_data$x, star_data$y)
circle_data <- df[df$dataset == "circle"]
circle_data <- df[df$dataset == "circle", ]
plot(circle_data$x, circle_data$y)
cor(circle_data$x, circle_data$y)
cor(dino_data$x, dino_data$y)
layout(matrix(1:16, nrow=4, ncol=4))
for(name in unique(datasaurus_dozen$dataset)){
subset <- datasaurus_dozen[datasaurus_dozen$dataset == name, ]
plot(subset$x, subset$y, main = name)
}
ggplot(datasaurus_dozen, aes(x = x, y = y, color = dataset))+
geom_point()+
facet_wrap(~ dataset, ncol = 3) +
theme(legend.position = "none")
ggplot(datasaurus_dozen, aes(x = x, y = y, color = dataset))+
geom_point() +
theme_bw() +
facet_wrap(~ dataset, ncol = 3) +
theme(legend.position = "none")
layout(matrix(1:16, nrow=4, ncol=4))
for(name in unique(datasaurus_dozen$dataset)){
subset <- datasaurus_dozen[datasaurus_dozen$dataset == name, ]
plot(subset$x, subset$y, main = name)
}
par(mar = c(2,2,2,2))
layout(matrix(1:16, nrow=4, ncol=4))
for(name in unique(datasaurus_dozen$dataset)){
subset <- datasaurus_dozen[datasaurus_dozen$dataset == name, ]
plot(subset$x, subset$y, main = name)
}
layout(1)
# Assign back to default value
par(mar = c(5,4,4,2) + 0.1)
sapply(unique(df$dataset), function(name){
subset <- df[df$dataset == name, ]
return(cor(subset$x, subset$y))
})
#| label: all-viz
#| fig-height: 10
#| fig-width: 10
par(mar = c(2,2,2,2))
layout(matrix(1:16, nrow=4, ncol=4))
for(name in unique(datasaurus_dozen$dataset)){
subset <- datasaurus_dozen[datasaurus_dozen$dataset == name, ]
plot(subset$x, subset$y, main = name)
}
layout(1)
# Assign back to default value
par(mar = c(5,4,4,2) + 0.1)
#| label: all-viz
#| fig-height: 10
#| fig-width: 10
ggplot(datasaurus_dozen, aes(x = x, y = y, color = dataset))+
geom_point() +
theme_bw() +
facet_wrap(~ dataset, ncol = 3) +
theme(legend.position = "none")
#| label: all-viz
#| fig-height: 100
#| fig-width: 10
ggplot(datasaurus_dozen, aes(x = x, y = y, color = dataset))+
geom_point() +
theme_bw() +
facet_wrap(~ dataset, ncol = 3) +
theme(legend.position = "none")
#| label: all-viz
#| fig-height: 8
#| fig-width: 8
ggplot(datasaurus_dozen, aes(x = x, y = y, color = dataset))+
geom_point() +
theme_bw() +
facet_wrap(~ dataset, ncol = 3) +
theme(legend.position = "none")
ggplot(data = dino_data, mapping = aes(x = x, y = y)) +
geom_point() +
theme_bw()
dino_data_eye <- dino_data %>%
mutate(
eye_category = case_when(
x >= 40 & x <= 60 & y >= 75 & y <= 80 ~ "Red",
TRUE ~ "Other"
)
)
ggplot(data = dino_data_eye, mapping = aes(x = x, y = y)) +
geom_point() +
theme_bw()
ggplot(data = dino_data_eye, mapping = aes(x = x, y = y), color = eye_category) +
geom_point() +
theme_bw()
dino_data_eye <- dino_data %>%
mutate(
eye_category = case_when(
x >= 40 & x <= 60 & y >= 75 & y <= 80 ~ "Red",
TRUE ~ "Other"
)
)
ggplot(data = dino_data_eye, mapping = aes(x = x, y = y), color = eye_category) +
geom_point() +
theme_bw()
dino_data_eye <- dino_data %>%
mutate(
eye_category = case_when(
x >= 40 & x <= 60 & y >= 75 & y <= 80 ~ "Red",
TRUE ~ "Other"
)
)
ggplot(dino_data_eye, aes(x = x, y = y, color = eye_category)) +
geom_point() +
scale_color_manual(values = c("Red" = "red", "Other" = "gray70")) +
theme_bw()
dino_data_eye <- dino_data %>%
mutate(
eye_category = case_when(
x >= 40 & x <= 60 & y >= 75 & y <= 95 ~ "Red",
TRUE ~ "Other"
)
)
ggplot(dino_data_eye, aes(x = x, y = y, color = eye_category)) +
geom_point() +
scale_color_manual(values = c("Red" = "red", "Other" = "gray70")) +
theme_bw()
dino_data_eye <- dino_data %>%
mutate(
eye_category = case_when(
x >= 40 & x <= 60 & y >= 75 & y <= 90 ~ "Red",
TRUE ~ "Other"
)
)
ggplot(dino_data_eye, aes(x = x, y = y, color = eye_category)) +
geom_point() +
scale_color_manual(values = c("Red" = "red", "Other" = "gray70")) +
theme_bw()
dino_data_eye <- dino_data %>%
mutate(
eye_category = case_when(
x >= 40 & x <= 60 & y >= 75 & y <= 88 ~ "Red",
TRUE ~ "Other"
)
)
ggplot(dino_data_eye, aes(x = x, y = y, color = eye_category)) +
geom_point() +
scale_color_manual(values = c("Red" = "red", "Other" = "gray70")) +
theme_bw()
dino_data_eye <- dino_data %>%
mutate(
eye_category = case_when(
x >= 40 & x <= 60 & y >= 75 & y <= 88 ~ "Eye",
TRUE ~ "Other"
)
)
ggplot(dino_data_eye, aes(x = x, y = y, color = eye_category)) +
geom_point() +
scale_color_manual(values = c("Red" = "red", "Other" = "gray70")) +
theme_bw()
dino_data_eye <- dino_data %>%
mutate(
eye_category = case_when(
x >= 40 & x <= 60 & y >= 75 & y <= 88 ~ "Eye",
TRUE ~ "Other"
)
)
ggplot(dino_data_eye, aes(x = x, y = y, color = eye_category)) +
geom_point() +
scale_color_manual(values = c("Eye" = "red", "Other" = "gray70")) +
theme_bw()
dim(df)
# cat("Dimension of dataset:", dim(df), "\n")
# print('Names of columns in the dataset:', names(df))
table(datasaurus_dozen$dataset)
# Variable x
summary(df$x)
# Variable y
summary(df$y)
dino_data <- df[df$dataset == 'dino', ]
plot(df$x, df$y)
plot(dino_data$x, dino_data$y)
ggplot(data = dino_data, mapping = aes(x = x, y = y)) +
geom_point() +
theme_bw()
dino_data_eye <- dino_data %>%
mutate(
eye_category = case_when(
x >= 40 & x <= 60 & y >= 75 & y <= 88 ~ "Eye",
TRUE ~ "Other"
)
)
ggplot(dino_data_eye, aes(x = x, y = y, color = eye_category)) +
geom_point() +
scale_color_manual(values = c("Eye" = "red", "Other" = "gray70")) +
theme_bw()
cor(dino_data$x, dino_data$y)
# dino_data |>
#   summarize(r = cor(x, y))
library(datasauRus)
library(ggplot2)
library(dplyr)
library(tidyr)
df <- datasaurus_dozen
install.packages("gganimate")
library(tidytuesdayR)
library(ggplot2)
library(gganimate)
tuesdata <- tidytuesdayR::tt_load('2025-08-26')
billboard <- tuesdata$billboard
topics <- tuesdata$topics
tuesdata <- tidytuesdayR::tt_load('2025-08-26')
billboard <- tuesdata$billboard
topics <- tuesdata$topics
View(tuesdata)
View(billboard)
library(dplyr)
## Personal Practice
class(billboard$date)
View(billboard)
billboard -> billboard %>%
mutate(year = as.numeric(format(date, "%Y")))
billboard <- billboard %>%
mutate(year = as.numeric(format(date, "%Y")))
View(billboard)
hist(billboard$front_person_age)
hist(billboard$weeks_at_number_one)
plot(billboard$front_person_age, billboard$weeks_at_number_one)
## Histogram of Weeks at Number one
ggplot(billboard, aes(x = weeks_at_number_one)) +
geom_histogram()
## Histogram of Weeks at Number one
ggplot(billboard, aes(x = weeks_at_number_one)) +
geom_histogram(binwidth=3, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Bin size = 3") +
theme_ipsum() +
theme(
plot.title = element_text(size=15)
)
library(tidyverse)
install.packages("tidyverse")
install.packages("hrbrthemes")
library(tidyverse)
library(hrbrthemes)
## Histogram of Weeks at Number one
ggplot(billboard, aes(x = weeks_at_number_one)) +
geom_histogram(binwidth=3, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Bin size = 3") +
theme_ipsum() +
theme(
plot.title = element_text(size=15)
)
## Histogram of Weeks at Number one
ggplot(billboard, aes(x = weeks_at_number_one)) +
geom_histogram(binwidth=3, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Bin size = 3") +
theme_ipsum() +
theme(
plot.title = element_text(size=15)
) +
transition_time(year) +
ease_aes("linear")
## Histogram of Weeks at Number one
p <-
ggplot(billboard, aes(x = weeks_at_number_one)) +
geom_histogram(binwidth=3, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Bin size = 3") +
theme_ipsum() +
theme(
plot.title = element_text(size=15)
) +
transition_time(year) +
ease_aes("linear")
anim <- animate(p)
anim
animate(p, renderer = gifski_renderer())
## Histogram of Weeks at Number one
p <-
ggplot(billboard, aes(x = weeks_at_number_one)) +
geom_histogram(binwidth=3, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
theme_ipsum() +
theme(
plot.title = element_text(size=15)
) +
labs(title = 'Year: {frame_time}', x = 'Total Weeks of Number One', y = 'Count') +
transition_time(year) +
ease_aes("linear")
animate(p, renderer = gifski_renderer())
## Histogram of Weeks at Number one
p <-
ggplot(billboard, aes(x = weeks_at_number_one)) +
geom_histogram(binwidth=3, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
theme_ipsum() +
theme(
plot.title = element_text(size=15)
) +
labs(title = 'Year: {year}', x = 'Total Weeks of Number One', y = 'Count') +
transition_time(year) +
ease_aes("linear")
animate(p, renderer = gifski_renderer())
## Histogram of Weeks at Number one
p <-
ggplot(billboard, aes(x = weeks_at_number_one)) +
geom_histogram(binwidth=3, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
theme_ipsum() +
theme(
plot.title = element_text(size=15)
) +
labs(title = 'Year: {frame_time %/% 1}', x = 'Total Weeks of Number One', y = 'Count') +
transition_time(year) +
ease_aes("linear")
animate(p, renderer = gifski_renderer())
animate(p, duration = 10, fps = 20, renderer = gifski_renderer())
barplot(billboard$year)
hist(billboard$year)
barplot(table(billboard$cdr_genre))
animate(p, duration = 60, fps = 10, renderer = gifski_renderer())
## Histogram of Weeks at Number one
p <-
ggplot(billboard, aes(x = weeks_at_number_one)) +
geom_histogram(binwidth=3, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
theme_ipsum() +
theme(
plot.title = element_text(size=15)
) +
labs(title = 'Year: {frame_time %/% 1}', x = 'Total Weeks of Number One', y = 'Count') +
transition_time(year) +
ease_aes("cubic-in-out")
animate(p, duration = 60, fps = 10, renderer = gifski_renderer())
billboard_pct <- billboard %>%
group_by(year) %>%
mutate(total = n()) %>%
ungroup()
## Histogram of Weeks at Number one
p <-
ggplot(billboard, aes(x = weeks_at_number_one)) +
geom_histogram(aes(y = after_stat(count) / unique(total) * 100),
binwidth=3, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
theme_ipsum() +
theme(
plot.title = element_text(size=15)
) +
labs(title = 'Year: {frame_time %/% 1}', x = 'Total Weeks of Number One', y = 'Count') +
transition_time(year) +
ease_aes("cubic-in-out")
animate(p, duration = 60, fps = 10, renderer = gifski_renderer())
## Histogram of Weeks at Number one
p <-
ggplot(billboard_pct, aes(x = weeks_at_number_one)) +
geom_histogram(aes(y = after_stat(count) / unique(total) * 100),
binwidth=3, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
theme_ipsum() +
theme(
plot.title = element_text(size=15)
) +
labs(title = 'Year: {frame_time %/% 1}', x = 'Total Weeks of Number One', y = 'Count') +
transition_time(year) +
ease_aes("cubic-in-out")
animate(p, duration = 60, fps = 10, renderer = gifski_renderer())
View(billboard_pct)
billboard <- billboard %>%
mutate(year = as.numeric(format(date, "%Y")))
billboard <- billboard %>%
group_by(year) %>%
mutate(total = n()) %>%
ungroup()
billboard_pct <- billboard %>%
filter(year < 2025) %>%
group_by(year) %>%
summarise (n = n()) %>%
mutate(freq = n / sum(n))
View(billboard_pct)
billboard_pct <- billboard %>%
filter(year < 2025) %>%
group_by(year, weeks_at_number_one) %>%
summarise (n = n()) %>%
mutate(freq = n / sum(n))
View(billboard_pct)
p2 <-
ggplot(billboard_pct, aes(x = weeks_at_number_one)) +
geom_histogram(freq, binwidth=3, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
theme_ipsum() +
theme(
plot.title = element_text(size=15)
) +
labs(title = 'Year: {frame_time %/% 1}', x = 'Total Weeks of Number One', y = 'Count') +
transition_time(year) +
ease_aes("cubic-in-out")
View(billboard_pct)
p2 <-
ggplot(billboard_pct, aes(x = weeks_at_number_one)) +
geom_histogram(aes(y = freq), binwidth=3, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
theme_ipsum() +
theme(
plot.title = element_text(size=15)
) +
labs(title = 'Year: {frame_time %/% 1}', x = 'Total Weeks of Number One', y = 'Count') +
transition_time(year) +
ease_aes("cubic-in-out")
animate(p, duration = 60, fps = 10, renderer = gifski_renderer())
animate(p2, duration = 60, fps = 10, renderer = gifski_renderer())
p2 <-
ggplot(billboard_pct, aes(x = weeks_at_number_one)) +
geom_histogram(aes(y = freq), fill="#69b3a2", color="#e9ecef", alpha=0.9) +
theme_ipsum() +
theme(
plot.title = element_text(size=15)
) +
labs(title = 'Year: {frame_time %/% 1}', x = 'Total Weeks of Number One', y = 'Count') +
transition_time(year) +
ease_aes("cubic-in-out")
animate(p2, duration = 60, fps = 10, renderer = gifski_renderer())
p2 <-
ggplot(billboard_pct, aes(x = weeks_at_number_one)) +
geom_histogram(aes(y = freq * 100), fill="#69b3a2", color="#e9ecef", alpha=0.9) +
theme_ipsum() +
theme(
plot.title = element_text(size=15)
) +
labs(title = 'Year: {frame_time %/% 1}', x = 'Total Weeks of Number One', y = 'Percentage') +
transition_time(year) +
ease_aes("cubic-in-out")
animate(p2, duration = 60, fps = 10, renderer = gifski_renderer())
## Histogram of Weeks at Number one
p <-
ggplot(billboard, aes(x = weeks_at_number_one)) +
geom_histogram(binwidth=3, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
theme_ipsum() +
theme(
plot.title = element_text(size=15)
) +
labs(title = 'Year: {frame_time %/% 1}', x = 'Total Weeks of Number One', y = 'Count') +
transition_time(year) +
ease_aes("cubic-in-out")
animate(p, duration = 60, fps = 10, renderer = gifski_renderer())
p <-
ggplot(billboard, aes(x = weeks_at_number_one)) +
geom_histogram(
aes(y = after_stat(100 * count / sum(count))),
binwidth = 3,
fill = "#69b3a2",
color = "#e9ecef",
alpha = 0.9
) +
theme_ipsum() +
theme(plot.title = element_text(size = 15)) +
labs(
title = 'Year: {frame_time %/% 1}',
x = 'Total Weeks of Number One',
y = 'Percentage (%)'
) +
transition_time(year) +
ease_aes("cubic-in-out")
animate(p, duration = 60, fps = 10, renderer = gifski_renderer())
billboard <- tuesdata$billboard
topics <- tuesdata$topics
billboard <- billboard %>%
mutate(year = as.integer(format(date, "%Y")))
library(tidytuesdayR)
library(ggplot2)
library(gganimate)
library(dplyr)
library(tidyverse)
library(hrbrthemes)
tuesdata <- tidytuesdayR::tt_load('2025-09-02')
frogID_data <- tuesdata$frogID_data
frog_names <- tuesdata$frog_names
View(frogID_data)
View(frog_names)
plot(frogID_data$decimalLongitude, frogID_data$decimalLongitude)
class(frogID_data$eventDate)
plot(frogID_data$decimalLongitude, frogID_data$decimalLongitude, aesp = 1)
hist(frogID_data$eventDate, breaks = 30)
plot(frogID_data$decimalLongitude, frogID_data$decimalLongitude)
plot(frogID_data$decimalLongitude, frogID_data$decimalLatitude)
hist(frogID_data$eventDate, breaks = 30)
frog1109 <- frogID_data[frogID_data$eventDate == '2023-11-09', ]
table(frog1109$recordedBy)
barplot(table(frog1109$recordedBy))
table(frog1109$stateProvince)
barplot(table(frog1109$stateProvince))
barplot(table(frogID_data$scientificName))
sort(table(frogID_data$scientificName), decreasing = T)
top8 <- names(sort(table(frogID_data$scientificName), decreasing = T))[1:8]
top8
frogDat <- frogID_data[frogID_data$scientificName %in% top8, ]
dim(frogDat)
#### LOOK AT the Video
hist(frogID_data$eventDate[frogID_data$scientificName %in% top8, ])
